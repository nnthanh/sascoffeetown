@{
    Layout = null;
}

<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <title>SAS Coffee Town</title>

    <meta content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0' name='viewport' />
    <meta name="viewport" content="width=device-width" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>

    <!--Loader-->
    <link rel="stylesheet" href="~/Content/css/login.css">
    <link rel="stylesheet" href="~/Content/css/loginloader.css">
    <link href='https://fonts.googleapis.com/css?family=Ubuntu:400,300' rel='stylesheet' type='text/css'>
    <!-- Global vars -->
    <script src="~/Content/js/globvars.js"></script>
</head>
<body>
    <div class="loader" hidden id="myloader">
        <canvas width="1080" height="1080" id="loader"></canvas>
        <h1>Loading</h1>
    </div>
    <div class="login-page">
        <div class="form">
            @*<form class="register-form">             
                <input type="text" placeholder="name" />
                <input type="password" placeholder="password" />
                <input type="text" placeholder="email address" />
                <button>create</button>
                <p class="message">Already registered? <a href="#">Sign In</a></p>
            </form>*@
            <form class="login-form">
                <p>Welcome to SAS Coffee Town!</p>
                <input type="text" placeholder="username" id="user" />
                <input type="password" placeholder="password" id="pwd" />
                <button id="submitBtn">login</button>
            </form>
        </div>
    </div>

    <script type="text/javascript">
    	$('.message a').click(function(){
			$('form').animate({height: "toggle", opacity: "toggle"}, "slow");
		});


    	document.getElementById("submitBtn").onclick = function () {
    	    $('#myloader').show();
    	    initLoader();   
   	    
    	    $(':button').prop('disabled', true);
		    var res = {
		        username: $('#user').val(),
                password: $('#pwd').val()
		    };

		    var my_data;
		 
		    $.ajax({
		        type: 'POST',
		        async: true,
                url: 'http://' + PORT + '/sas/sas_server/admin/authenticate',
		        data: JSON.stringify(res),
		        success: function (resp) {
		            if (resp.statuskey == true) {
		                my_data = {
		                    Name: resp.name,
		                    Token: resp.token
		                };

		                $.ajax({
		                    type: 'POST',
		                    url: '@Url.Action("SuccessLogin", "Account")',
		                    data: JSON.stringify(my_data),
		                    success: function (resp) {
		                        if (resp.IsOK == true) {
		                            window.location = '@Url.Action("UpgradeMembership","Home")'
		                        } else {
		                            alert('Fail!');
		                        }
		                    },
		                    dataType: 'json',
		                    contentType: 'application/json; charset=utf-8'
		                });
		            } else {
		                alert(resp.message);
		                $(':button').prop('disabled', false);
		                $('#myloader').hide();
		            }
		        },
		        dataType: 'json',
		        contentType: 'application/json; charset=utf-8'
		    });


 
		};
</script>
    <script>
        function initLoader() {
            Loadr = new (function Loadr(id) {
                // # Defines
                const max_size = 34;
                const max_particles = 1500;
                const min_vel = 20;
                const max_generation_per_frame = 10;

                // #Variables
                // sometimes i wrote code horrible enouhg to make eyes bleed 
                var canvas = document.getElementById(id);
                var ctx = canvas.getContext('2d');
                var height = canvas.height;
                var center_y = height / 2;
                var width = canvas.width;
                var center_x = width / 2;
                var animate = true;
                var particles = [];
                var last = Date.now(), now = 0;
                var died = 0, len = 0, dt;

                function isInsideHeart(x, y) {
                    x = ((x - center_x) / (center_x)) * 3;
                    y = ((y - center_y) / (center_y)) * -3;
                    // Simplest Equation of lurve
                    var x2 = x * x;
                    var y2 = y * y;
                    // Simplest Equation of lurve

                    return (Math.pow((x2 + y2 - 1), 3) - (x2 * (y2 * y)) < 0);

                }

                function random(size, freq) {
                    var val = 0;
                    var iter = freq;

                    do {
                        size /= iter;
                        iter += freq;
                        val += size * Math.random();
                    } while (size >= 1);

                    return val;
                }

                function Particle() {
                    var x = center_x;
                    var y = center_y;
                    var size = ~~random(max_size, 2.4);
                    var x_vel = ((max_size + min_vel) - size) / 2 - (Math.random() * ((max_size + min_vel) - size));
                    var y_vel = ((max_size + min_vel) - size) / 2 - (Math.random() * ((max_size + min_vel) - size));
                    var nx = x;
                    var ny = y;
                    var r, g, b, a = 0.05 * size;

                    this.draw = function () {
                        r = ~~(255 * (x / width));
                        g = ~~(255 * (1 - (y / height)));
                        b = ~~(255 - r);
                        ctx.fillStyle = 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';
                        ctx.beginPath();
                        ctx.arc(x, y, size, 0, Math.PI * 2, true);
                        ctx.closePath();
                        ctx.fill();
                    }

                    this.move = function (dt) {

                        nx += x_vel * dt;
                        ny += y_vel * dt;
                        if (!isInsideHeart(nx, ny)) {
                            if (!isInsideHeart(nx, y)) {
                                x_vel *= -1;
                                return;
                            }

                            if (!isInsideHeart(x, ny)) {
                                y_vel *= -1;
                                return;
                            }
                            // Lets do the crazy furbidden
                            x_vel = -1 * y_vel;
                            y_vel = -1 * x_vel;
                            return;
                        }

                        x = nx;
                        y = ny;
                    }

                }

                function movementTick() {
                    var len = particles.length;
                    var dead = max_particles - len;
                    for (var i = 0; i < dead && i < max_generation_per_frame; i++) {
                        particles.push(new Particle());
                    }

                    // Update the date
                    now = Date.now();
                    dt = last - now;
                    dt /= 1000;
                    last = now;
                    particles.forEach(function (p) {
                        p.move(dt);
                    });
                }

                function tick() {

                    ctx.clearRect(0, 0, width, height);
                    particles.forEach(function (p) {
                        p.draw();
                    });

                    requestAnimationFrame(tick);
                }

                this.start = function () {

                }

                this.done = function () {

                }

                setInterval(movementTick, 16);
                tick();

            })("loader");
        }      
    </script>
</body>
</html>

